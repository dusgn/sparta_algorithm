이론
알고리즘은 문제를 해결하기 위한 여러 방법들의 집합이다.
시간복잡도는 입력값과 문제를 해결하는 데 걸리는 시간과의 상관관계이다.
즉, 입력값의 길이를 N이라고 한다면, 그에 따라 얼마나 비례해서 증가하는지를 측정해야 한다. 공간복잡도는 공간과 상관관계!
이를 표기하기 위해서는 점근 표기법이란 걸 사용한다. 그 종류로는 빅오(Big-O)표기법, 빅 오메가(Big-Ω) 표기법이 있다.
빅 오메가(Big-Ω) 표기법은 최선의 경우! 그러나 현실에서 잘 적용이 안 되므로 거의 알고리즘의 성능을 빅오표기법으로 측정한다.
빅오(Big-O)표기법은 최악의 경우! 입력값에 비례해서 어느 정도 반복이 될지 감이 오면, 상수를 제거한 채 표현하면 된다.
결론
입력값에 비례해서 얼마나 늘어날지 파악해보자. 1 ? N ? N^2 ?
공간복잡도 보다는 시간 복잡도를 더 줄이기 위해 고민하자.
최악의 경우에 시간이 얼마나 소요될지(빅오 표기법)에 대해 고민하자
실습
해당 문자가 알파벳인지 확인하는 방법 str.isalpha()
문자를 아스키 코드로 바꾸는 방법 ord('a')
아스키 코드를 문자로 바꾸는 방법 chr(97)
0이 26개만큼 초기화 된 배열 만들기 [0] * 26
알파벳을 숫자 인덱스로 만들기 ord(char) - ord('a')